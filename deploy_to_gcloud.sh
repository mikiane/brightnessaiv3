#!/bin/bash

# Script de d√©ploiement pour Google Cloud
# Usage: ./deploy_to_gcloud.sh

echo "üöÄ D√©ploiement de BrightnessAI v3 sur Google Cloud"

# Variables
PROJECT_DIR="/home/michel/brightnessaiv3"
VENV_PATH="/home/michel/myenv"
REPO_URL="https://github.com/mikiane/brightnessaiv3.git"

# √âtape 1: Cloner le repository
echo "üì¶ √âtape 1: Clonage du repository..."
if [ -d "$PROJECT_DIR" ]; then
    echo "Le dossier $PROJECT_DIR existe d√©j√†. Mise √† jour..."
    cd $PROJECT_DIR
    git pull origin main
else
    echo "Clonage du repository..."
    cd /home/michel
    git clone $REPO_URL
    cd $PROJECT_DIR
fi

# √âtape 2: Cr√©er l'environnement virtuel (global) si n√©cessaire
echo "üêç √âtape 2: V√©rification/Cr√©ation de l'environnement virtuel global √† $VENV_PATH..."
if [ ! -d "$VENV_PATH" ]; then
    python3 -m venv "$VENV_PATH"
    echo "Environnement virtuel global cr√©√© √† $VENV_PATH."
else
    echo "L'environnement virtuel global existe d√©j√†."
fi

# √âtape 3: Activer l'environnement global et installer les d√©pendances du projet
echo "üìö √âtape 3: Installation des d√©pendances dans $VENV_PATH..."
source "$VENV_PATH/bin/activate"
pip install --upgrade pip
pip install -r requirements.txt

# √âtape 4: Copier le fichier .env depuis l'ancien projet si n√©cessaire
echo "üîê √âtape 4: Configuration des variables d'environnement..."
if [ ! -f "$PROJECT_DIR/.env" ]; then
    if [ -f "/home/michel/brightnessaiv2/.env" ]; then
        echo "Copie du fichier .env depuis l'ancien projet..."
        cp /home/michel/brightnessaiv2/.env $PROJECT_DIR/.env
        echo "Fichier .env copi√©. V√©rifiez les chemins et variables."
    else
        echo "‚ö†Ô∏è  ATTENTION: Fichier .env non trouv√©!"
        echo "Cr√©ez un fichier .env avec vos cl√©s API et configurations."
    fi
else
    echo "Fichier .env d√©j√† pr√©sent."
fi

# √âtape 5: Cr√©er les dossiers n√©cessaires
echo "üìÅ √âtape 5: Cr√©ation des dossiers n√©cessaires..."
mkdir -p $PROJECT_DIR/docs
mkdir -p $PROJECT_DIR/tmp
mkdir -p $PROJECT_DIR/datas

# √âtape 6: Donner les permissions d'ex√©cution aux scripts
echo "üîß √âtape 6: Configuration des permissions..."
chmod +x $PROJECT_DIR/start-all.sh
chmod +x $PROJECT_DIR/stop-all.sh
chmod +x $PROJECT_DIR/status-all.sh
chmod +x $PROJECT_DIR/create_virtualenv.sh

# √âtape 7: Arr√™ter les anciens services si n√©cessaire
echo "üõë √âtape 7: Arr√™t des anciens services..."
if [ -f "/home/michel/brightnessaiv2/stop-all.sh" ]; then
    echo "Arr√™t des services de brightnessaiv2..."
    /home/michel/brightnessaiv2/stop-all.sh
fi

# √âtape 8: D√©marrer les nouveaux services
echo "‚úÖ √âtape 8: D√©marrage des services..."
cd $PROJECT_DIR
./start-all.sh

# V√©rification
echo "üîç V√©rification des services..."
sleep 3
./status-all.sh

echo "‚ú® D√©ploiement termin√©!"
echo ""
echo "üìù Prochaines √©tapes:"
echo "1. V√©rifiez le fichier .env et ajustez les variables si n√©cessaire"
echo "2. Testez les APIs:"
echo "   - http://[IP_SERVEUR]:8000 (Streaming API)"
echo "   - http://[IP_SERVEUR]:8001 (Transformers API)"
echo "   - http://[IP_SERVEUR]:8002 (Alter Brain API)"
echo "3. Configurez le cron pour les scripts automatiques si n√©cessaire"
echo ""
echo "Pour voir les logs:"
echo "  tail -f $PROJECT_DIR/docs/error.log"
